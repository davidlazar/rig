package main

import (
	"bufio"
	"fmt"
	"log"
	"os"
	"path/filepath"
	"strings"
)

func main() {
	log.SetFlags(log.Lshortfile)
	if len(os.Args) < 2 {
		log.Fatal("missing required datadir argument")
	}
	datadir := os.Args[1]
	files, err := filepath.Glob(filepath.Join(datadir, "*.idx"))
	if err != nil {
		log.Fatalf("glob: %s", err)
	}
	if len(files) == 0 {
		log.Fatalln("no data files found")
	}
	out, err := os.Create("data.go")
	if err != nil {
		log.Fatal(err)
	}
	fmt.Fprintf(out, "// Code generated by \"go run data/togo.go %s\"; DO NOT EDIT.\n", datadir)
	fmt.Fprintf(out, "package main\n\n")
	for _, file := range files {
		basename := strings.TrimSuffix(filepath.Base(file), ".idx")
		fmt.Fprintf(out, "var %s = []string{\n", basename)
		r, err := os.Open(file)
		if err != nil {
			log.Fatal(err)
		}
		scanner := bufio.NewScanner(r)
		for scanner.Scan() {
			fmt.Fprintf(out, "\t%q,\n", scanner.Text())
		}
		if err := scanner.Err(); err != nil {
			log.Fatal(err)
		}
		fmt.Fprintf(out, "}\n")
		r.Close()
	}
	out.Close()
}
